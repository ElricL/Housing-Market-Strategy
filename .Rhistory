W20 = c(3.3, 4.0, 2.4, 1.4, 1.9, 3.9, 2.0, 2.9, 2.7, 3.7, 1.4)
Rhat <- mean(W20)/mean(W19)
# Q2
N=440
W19 = c(3.0, 3.4, 2.2, 1.8, 1.9, 1.9, 2.3, 2.0, 2.7, 3.1, 1.1)
W20 = c(3.3, 4.0, 2.4, 1.4, 1.9, 3.9, 2.0, 2.9, 2.7, 3.7, 1.4)
n=length(w19)
n=length(W19)
# Q2
N=440
W19 = c(3.0, 3.4, 2.2, 1.8, 1.9, 1.9, 2.3, 2.0, 2.7, 3.1, 1.1)
W20 = c(3.3, 4.0, 2.4, 1.4, 1.9, 3.9, 2.0, 2.9, 2.7, 3.7, 1.4)
GPA_data<-tibble(W19, W20)
n=length(W19)
fpc.srs = rep(N, n)
GPA.design <- svydesign(id=~0, data=GPA_data, fpc=fpc.srs)
svyratio(~W20, ~W19, design=GPA.design)
#0R
var_Rhat <- (1/mean(W19)^2)*
(1-(n/N))*(1/n)*
(var(W20)+Rhat^2*var(W19)-2*Rhat*cov(W20, W19))
SE_Rhat <- sqrt(var_Rhat)
# Q3
N=440
W19 = c(3.1, 3.4, 2.1, 1.9, 2.1, 1.9, 2.3, 2.4, 2.7, 3.1, 1.1)
W20 = c(3.3, 4.0, 2.4, 1.4, 1.9, 3.9, 2.0, 2.9, 2.7, 3.7, 1.4)
n=length(W19)
Rhat <- mean(W20)/mean(W19)
var_Rhat <- (1/mean(W19)^2)*
(1-(n/N))*(1/n)*
(var(W20)+Rhat^2*var(W19)-2*Rhat*cov(W20, W19))
SE_Rhat <- sqrt(var_Rhat)
lower_bound<-Rhat-qnorm(0.975)*SE_Rhat
Upper_bound<-Rhat+qnorm(0.975)*SE_Rhat
## simple linear regression
data(cars)
head(cars)
## library(tidyverse)
cars %>%
ggplot(aes(x=speed, y=dist))+
geom_point()
library(tidyverse)
cars %>%
ggplot(aes(x=speed, y=dist))+
geom_point()
my_SLRmodel <- lm(dist~speed, data=cars)
summary(my_SLRmodel)
## linear regression
data(iris)
head(iris)
my_LRmodel <- lm(Petal.Width ~ Petal.Length + Sepal.Width +
Sepal.Length + Sepal.Width*Sepal.Length,
data=iris)
summary(my_LRmodel)
library(survey)
Household_Size = c(4, 5, 2, 4, 4, 1, 3, 5, 4, 6)
Grocery_Bill = c(373.74, 596.13, 200.01, 526.58,
405.47,  190.11, 325.73, 515.41, 323.70, 711.21)
n=length(Household_Size)
N=1000
library(survey)
Household_Size = c(4, 5, 2, 4, 4, 1, 3, 5, 4, 6)
Grocery_Bill = c(373.74, 596.13, 200.01, 526.58,
405.47,  190.11, 325.73, 515.41, 323.70, 711.21)
n=length(Household_Size)
N=1000
summary(lm(Grocery_Bill~Household_Size))
summary(lm(Grocery_Bill~Household_Size))
fpc.srs = rep(N, n)
house.design <- svydesign(id=~1, data=house_data, fpc=fpc.srs)
mysvylm <- svyglm(Grocery_Bill~Household_Size, house.design)
house_data <- tibble(Household_Size, Grocery_Bill)
summary(lm(Grocery_Bill~Household_Size))
fpc.srs = rep(N, n)
house.design <- svydesign(id=~1, data=house_data, fpc=fpc.srs)
mysvylm <- svyglm(Grocery_Bill~Household_Size, house.design)
summary(mysvylm)
N=800
n=length(Household_Size)
# Q5
Household_Size = c(4, 5, 2, 4, 4, 1, 3, 4, 4, 5, 7)
Grocery_Bill = c(373.74, 596.13, 200.01, 426.58, 405.47,  190.11,
325.73, 515.41, 323.70, 711.21, 699.31)
N=800
n=length(Household_Size)
house_data<-tibble(Household_Size, Grocery_Bill)
fpc.srs = rep(N, n)
house.design <- svydesign(id=~1, data=house_data, fpc=fpc.srs)
View(house.design)
View(house_data)
mysvylm <- svyglm(Grocery_Bill ~ Household_Size, house.design)
summary(mysvylm)
# Q6
data(iris)
# Q6
data(iris)
force(iris)
View(iris)
# Q6
data(iris)
N=400
n=length(Sepal.Length)
n=length(iris$Sepal.Length)
# Q6
data(iris)
N=400
n=length(iris$Sepal.Length)
fpc.srs = rep(N, n)
iris.design <- svydesign(id=~1, data=iris, fpc=fpc.srs)
# Q6
data(iris)
N=400
n=length(iris$Sepal.Length)
fpc.srs = rep(N, n)
iris.design <- svydesign(id=~1, data=iris, fpc=fpc.srs)
mysvylm <- svyglm(Petal.Width ~ Petal.Length+Sepal.Length+Sepal.Width, house.design)
# Q6
data(iris)
N=400
n=length(iris$Sepal.Length)
fpc.srs = rep(N, n)
iris.design <- svydesign(id=~1, data=iris, fpc=fpc.srs)
mysvylm <- svyglm(Petal.Width ~ Petal.Length+Sepal.Length+Sepal.Width, iris.design)
summary(mysvylm)
mydata <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
## Standard Logistic Regression
mylogit<-glm(admit ~ gre + gpa +
as.factor(rank), data=mydata, family="binomial")
summary(mylogit)
e^(-0.7544)
## Survey Estimation for Logistic Regression
n=length(mydata$admit)
N=6000
#install.packages("survey")
library(survey)
## Using the Survey Library
fpc.srs = rep(N, n)
ucla.design <- svydesign(id=~1, data=mydata, fpc=fpc.srs)
mysvyglm <- svyglm(admit ~ gre + gpa + as.factor(rank),
ucla.design, family="binomial")
summary(mysvyglm)
#Q7
log_odds =-3.989979+0.002264*(600)+0.804038*(3.2)-0.675443*(0)-1.34*(0)-1.55*(0)
#Q7
log_odds =-3.989979+0.002264*(600)+0.804038*(3.2)-0.675443*(0)-1.34*(0)-1.55*(0)
p_p_1 = 10^(log_odds)
#Q7
log_odds =-3.989979+0.002264*(600)+0.804038*(3.2)-0.675443*(0)-1.34*(0)-1.55*(0)
odd = 10^(log_odds)
#Q7
log_odds =-3.989979+0.002264*(600)+0.804038*(3.2)-0.675443*(0)-1.34*(0)-1.55*(0)
odds = 10^(log_odds)
ex = -0.7544
ex = 10^(ex)
ex2 = 0.3199/(1-0.3199)
ex = -0.7544
ex = 10^(ex)
ex2 = 0.3199/(1-0.3199)
log_p = -3.99+0.02(520)+0.804(3.4)-0.675(1)
log_p = -3.99+0.02*(520)+0.804*(3.4)-0.675*(1)
log_p = -3.99+0.002*(520)+0.804*(3.4)-0.675*(1)
log_odds =-3.989979+0.002264*(520)+0.804038*(3.4)-0.675443*(1)
log_p =-3.989979+0.002264*(520)+0.804038*(3.4)-0.675443*(1)
p_1_p = 10^(log_p)
logit2prob(log_p)
install.packages("logit2prob")
log_p =-3.989979+0.002264*(520)+0.804038*(3.4)-0.675443*(1)
p = plogis(log_p)
p = plogis(log_odds)
log_p =-3.989979+0.002264*(520)+0.804038*(3.4)-0.675443*(1)
p = plogis(log_p)
log_p =-3.989979+0.002264*(520)+0.804038*(3.4)-0.675443*(1)
p = plogis(log_p)
log_p =-3.989979+0.002264*(520)+0.804038*(3.4)-0.675443*(1)
p = plogis(log_p)
#Q7
log_odds =-3.989979+0.002264*(600)+0.804038*(3.2)-0.675443*(0)-1.34*(0)-1.55*(0)
probability = plogis(log_odds)
# Q9
library(survey)
mydata <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
n=length(mydata$admit)
N=8000
fpc.srs = rep(N, n)
ucla.design <- svydesign(id=~1, data=mydata, fpc=fpc.srs)
mysvyglm <- svyglm(admit ~ gre + gpa + as.factor(rank),
ucla.design, family="binomial")
summary(mysvyglm)
#### Workspace set-up ####
library(janitor)
library(tidyverse)
# Load the data dictionary and the raw data and correct the variable names
raw_data <- read_csv("AA8MGinv.csv")
# Load the data dictionary and the raw data and correct the variable names
raw_data <- read_csv("AA8MGinv.csv")
# Load the data dictionary and the raw data and correct the variable names
raw_data <- read_csv("\OneDrive - University of Toronto\University 2020-2021\Fall\STA304\Problem Sets\Problem Set 2\AA8MGinv.csv")
# Load the data dictionary and the raw data and correct the variable names
raw_data <- read_csv("\University 2020-2021\Fall\STA304\Problem Sets\Problem Set 2\AA8MGinv.csv")
# Load the data dictionary and the raw data and correct the variable names
raw_data <- read_csv("C:\Users\elric\OneDrive - University of Toronto\University 2020-2021\Fall\STA304\Problem Sets\Problem Set 2AA8MGinv.csv")
# Load the data dictionary and the raw data and correct the variable names
raw_data <- read_csv("C:\Users\elric\OneDrive - University of Toronto\University 2020-2021\Fall\STA304\Problem Sets\Problem Set 2\AA8MGinv.csv")
?read
?read_csv
?read_
# Load the data dictionary and the raw data and correct the variable names
raw_data <- read_csv("AA8MGinv.csv")
setwd("C:/Users/elric/OneDrive - University of Toronto/University 2020-2021/Fall/STA304/Problem Sets/Problem Set 2")
library(knitr)
library(tidyverse)
library(tidyverse)
library(survey)
#library.packages('pander) <- uncomment me
library(pander)
library(survey)
#library.packages('pander) <- uncomment me
library(pander)
## CLEAN DATA
gss <- read.csv(file = 'gss.csv')
gss_life <- gss %>% select(total_children, feelings_life, own_rent,
average_hours_worked, income_family, age, marital_status)
library(survey)
#library.packages('pander) <- uncomment me
library(pander)
## CLEAN DATA
gss <- read.csv(file = 'gss.csv')
gss_life <- gss %>% select(total_children, feelings_life, own_rent,
average_hours_worked, income_family, age, marital_status)
# Remove NAs
gss_life <- gss_life %>%
drop_na(total_children) %>%
drop_na(feelings_life) %>%
drop_na(own_rent) %>%
drop_na(marital_status)
## CLEAN DATA
gss <- read.csv(file = 'gss.csv')
gss_life <- gss %>% select(total_children, feelings_life, own_rent,
average_hours_worked, income_family, age, marital_status)
# Remove NAs
gss_life <- gss_life %>%
drop_na(total_children) %>%
drop_na(feelings_life) %>%
drop_na(own_rent) %>%
drop_na(marital_status)
# Set NAs to 0 for hours worked
gss_life <- gss_life %>% drop_na(average_hours_worked)
# Remove those who don't know how much they work
# and don't know if they are paying rent
gss_life <- filter(gss_life, average_hours_worked != "Don't know")
gss_life <- filter(gss_life, own_rent != "Don't know")
## CLEAN DATA
gss <- read.csv(file = 'gss.csv')
gss_life <- gss %>% select(total_children, feelings_life, own_rent,
average_hours_worked, income_family, age, marital_status)
# Remove NAs
gss_life <- gss_life %>%
drop_na(total_children) %>%
drop_na(feelings_life) %>%
drop_na(own_rent) %>%
drop_na(marital_status)
# Set NAs to 0 for hours worked
gss_life <- gss_life %>% drop_na(average_hours_worked)
# Remove those who don't know how much they work
# and don't know if they are paying rent
gss_life <- filter(gss_life, average_hours_worked != "Don't know")
knitr::opts_chunk$set(echo = FALSE)
library(knitr)
library(tidyverse)
library(survey)
#library.packages('pander) <- uncomment me
library(pander)
## CLEAN DATA
gss <- read.csv(file = 'gss.csv')
gss_rent <- gss %>% select(total_children, own_rent,
average_hours_worked, income_family, age, marital_status)
# Remove NAs
gss_rent <- gss_rent %>%
drop_na(total_children) %>%
drop_na(own_rent) %>%
drop_na(marital_status)
# Set NAs to 0 for hours worked
gss_rent <- gss_rent %>% drop_na(average_hours_worked)
# Remove those who don't know how much they work
# and don't know if they are paying rent
gss_rent <- filter(gss_rent, average_hours_worked != "Don't know")
gss_rent <- filter(gss_rent, own_rent != "Don't know")
gss_rent <- gss_rent %>%
mutate(paid_cash_on_rent =
ifelse(own_rent=="Rented, even if no cash rent is paid", 0, 1))
ggplot(data=tips, aes(x=day)) +
geom_bar(aes(y = (..count..)/sum(..count..)))
ggplot(data=gss_rent, aes(x=own_rent)) +
geom_bar(aes(y = (..count..)/sum(..count..)))
ggplot(data=gss_rent, aes(x=own_rent)) +
geom_bar(aes(y = (..count..)/sum(..count..))) + labs(title = "Ownership Frequency", x = "Owned or rented", y = "Frequency")
ggplot(data=gss_rent, aes(x=own_rent)) +
geom_bar(aes(y = (..count..)/sum(..count..))) + labs(title = "Ownership Frequency", x = "Owned or rented", y = "Frequency") +
coord_flip()
ggplot(data=gss_rent, aes(x=own_rent)) +
geom_bar(aes(y = (..count..)/sum(..count..))) + labs(title = "Ownership Frequency", x = "Owned or rented", y = "Frequency") +
coord_flip() scale_x_discrete(labels=c("Not Owned", "Owned"))
ggplot(data=gss_rent, aes(x=own_rent)) +
geom_bar(aes(y = (..count..)/sum(..count..))) + labs(title = "Ownership Frequency", x = "Owned or rented", y = "Frequency") +
coord_flip() + scale_x_discrete(labels=c("Not Owned", "Owned"))
summary(gss_logit) %>% pander
setwd("~/GitHub/Housing-Market-Strategy")
knitr::opts_chunk$set(echo = FALSE)
library(knitr)
library(tidyverse)
library(survey)
#library.packages('pander) <- uncomment me
library(pander)
## CLEAN DATA
gss <- read.csv(file = 'gss.csv')
gss_rent <- gss %>% select(total_children, own_rent,
average_hours_worked, income_family, age, marital_status)
# Remove NAs
gss_rent <- gss_rent %>%
drop_na(total_children) %>%
drop_na(own_rent) %>%
drop_na(marital_status)
# Set NAs to 0 for hours worked
gss_rent <- gss_rent %>% drop_na(average_hours_worked)
# Remove those who don't know how much they work
# and don't know if they are paying rent
gss_rent <- filter(gss_rent, average_hours_worked != "Don't know")
gss_rent <- filter(gss_rent, own_rent != "Don't know")
gss_rent <- gss_rent %>%
mutate(paid_cash_on_rent =
ifelse(own_rent=="Rented, even if no cash rent is paid", 0, 1))
ggplot(data=gss_rent, aes(x=own_rent)) +
geom_bar(aes(y = (..count..)/sum(..count..))) + labs(title = "Ownership Frequency", x = "Owned or rented", y = "Frequency") +
coord_flip() + scale_x_discrete(labels=c("Not Owned", "Owned"))
n=length(gss_rent$income_family)
N=36708083 - 1941873 - 2021564 - 1948681
fpc.srs = rep(N, n)
gss.design <- svydesign(id=~1, data=gss_rent, fpc=fpc.srs)
gss_logit <- svyglm(paid_cash_on_rent ~ as.factor(income_family) + total_children + age + as.factor(average_hours_worked) + as.factor(marital_status),
gss.design, family="binomial")
summary(gss_logit) %>% pander
summary(gss_logit) %>% pander
summary(gss_logit) %>% pander
summary(gss_logit) %>% pander
summary(gss_logit) %>% pander
summary(gss_logit) %>% pander
summary(gss_logit) %>% pander
summary(gss_logit) %>% pander
ggplot(data=gss_rent, aes(x=own_rent)) +
geom_bar(aes(y = (..count..)/sum(..count..))) + labs(title = "Ownership Frequency", x = "Owned or rented", y = "Frequency") +
coord_flip() + scale_x_discrete(labels=c("Not Owned", "Owned"))
summary(gg_rent) %>% kable
ggplot(data=gss_rent, aes(x=own_rent)) +
geom_bar(aes(y = (..count..)/sum(..count..))) + labs(title = "Ownership Frequency", x = "Owned or rented", y = "Frequency") +
coord_flip() + scale_x_discrete(labels=c("Not Owned", "Owned"))
summary(ggs_rent) %>% kable
knitr::opts_chunk$set(echo = FALSE)
library(knitr)
library(tidyverse)
library(survey)
#library.packages('pander) <- uncomment me
library(pander)
## CLEAN DATA
gss <- read.csv(file = 'gss.csv')
gss_rent <- gss %>% select(total_children, own_rent,
average_hours_worked, income_family, age, marital_status)
# Remove NAs
gss_rent <- gss_rent %>%
drop_na(total_children) %>%
drop_na(own_rent) %>%
drop_na(marital_status)
# Set NAs to 0 for hours worked
gss_rent <- gss_rent %>% drop_na(average_hours_worked)
# Remove those who don't know how much they work
# and don't know if they are paying rent
gss_rent <- filter(gss_rent, average_hours_worked != "Don't know")
gss_rent <- filter(gss_rent, own_rent != "Don't know")
gss_rent <- gss_rent %>%
mutate(paid_cash_on_rent =
ifelse(own_rent=="Rented, even if no cash rent is paid", 0, 1))
ggplot(data=gss_rent, aes(x=own_rent)) +
geom_bar(aes(y = (..count..)/sum(..count..))) + labs(title = "Ownership Frequency", x = "Owned or rented", y = "Frequency") +
coord_flip() + scale_x_discrete(labels=c("Not Owned", "Owned"))
summary(ggs_rent) %>% kable
ggplot(data=gss_rent, aes(x=own_rent)) +
geom_bar(aes(y = (..count..)/sum(..count..))) + labs(title = "Ownership Frequency", x = "Owned or rented", y = "Frequency") +
coord_flip() + scale_x_discrete(labels=c("Not Owned", "Owned"))
summary(gss_rent) %>% kable
gss_plot <- ggplot(data=gss_rent, aes(x=own_rent)) +
geom_bar(aes(y = (..count..)/sum(..count..))) + labs(title = "Ownership Frequency", x = "Owned or rented", y = "Frequency") +
coord_flip() + scale_x_discrete(labels=c("Not Owned", "Owned"))
invisible(gss_plot)
invisible(dev.off())
dev.off()
invisible(getSymbols("^RUT"))
invisible(getSymbols("^RUT"))
ggplot(data=gss_rent, aes(x=own_rent)) +
geom_bar(aes(y = (..count..)/sum(..count..))) + labs(title = "Ownership Frequency", x = "Owned or rented", y = "Frequency") +
coord_flip() + scale_x_discrete(labels=c("Not Owned", "Owned"))
?pandoc.strong
ggplot(data=gss_rent, aes(x=own_rent)) +
geom_bar(aes(y = (..count..)/sum(..count..))) + labs(title = "Ownership Frequency", x = "Owned or rented", y = "Frequency") +
coord_flip() + scale_x_discrete(labels=c("Not Owned", "Owned"))
summary(gss_logit) %>% pander
summary(gss_logit)$coeff %>% pander
tinytex::install_tinytex()
knitr::opts_chunk$set(echo = FALSE)
library(knitr)
library(tidyverse)
library(survey)
#library.packages('pander) <- uncomment me
library(pander)
## CLEAN DATA
gss <- read.csv(file = 'gss.csv')
gss_rent <- gss %>% select(total_children, own_rent,
average_hours_worked, income_family, age, marital_status)
# Remove NAs
gss_rent <- gss_rent %>%
drop_na(total_children) %>%
drop_na(own_rent) %>%
drop_na(marital_status)
# Set NAs to 0 for hours worked
gss_rent <- gss_rent %>% drop_na(average_hours_worked)
# Remove those who don't know how much they work
# and don't know if they are paying rent
gss_rent <- filter(gss_rent, average_hours_worked != "Don't know")
gss_rent <- filter(gss_rent, own_rent != "Don't know")
gss_rent <- gss_rent %>%
mutate(own_or_not =
ifelse(own_rent=="Rented, even if no cash rent is paid", 0, 1))
pandoc.table(summary(gss_logit)$coeff)
pandoc.table(summary(gss_logit)$coeff, split.table = Inf)
pandoc.table(summary(gss_logit)$coeff, split.table = Inf, style='grid')
?pandoc.table
pandoc.table(summary(gss_logit)$coeff, split.table = Inf, style='grid')
?pander
summary(gss_logit)$coeff
kable(summary(gss_logit)$coeff)
kable(summary(gss_logit))
kable(summary(gss_logit)$coeff)
kable(summary(gss_logit)$coeff)
df <- summary(gss_logit)
View(df)
kable(summary(gss_logit)$coeff) %>%
kable_styling(full_width = F)
knitr::opts_chunk$set(echo = FALSE)
library(knitr)
library(tidyverse)
library(survey)
#library.packages('pander') <- uncomment me to install pander
library.packages('kableExtra')
knitr::opts_chunk$set(echo = FALSE)
library(knitr)
library(tidyverse)
library(survey)
#library.packages('pander') <- uncomment me to install pander
library(pander)
library(kableExtra)
## CLEAN DATA
gss <- read.csv(file = 'gss.csv')
gss_rent <- gss %>% select(total_children, own_rent,
average_hours_worked, income_family, age, marital_status)
# Remove NAs
gss_rent <- gss_rent %>%
drop_na(total_children) %>%
drop_na(own_rent) %>%
drop_na(marital_status)
# Set NAs to 0 for hours worked
gss_rent <- gss_rent %>% drop_na(average_hours_worked)
# Remove those who don't know how much they work
# and don't know if they are paying rent
gss_rent <- filter(gss_rent, average_hours_worked != "Don't know")
gss_rent <- filter(gss_rent, own_rent != "Don't know")
gss_rent <- gss_rent %>%
mutate(own_or_not =
ifelse(own_rent=="Rented, even if no cash rent is paid", 0, 1))
kable(summary(gss_logit)$coeff) %>%
kable_styling(full_width = F)
knitr::opts_chunk$set(echo = FALSE)
library(knitr)
library(tidyverse)
library(survey)
#library.packages('pander') <- uncomment me to install pander
library(pander)
library(kableExtra)
## CLEAN DATA
gss <- read.csv(file = 'gss.csv')
gss_rent <- gss %>% select(total_children, own_rent,
average_hours_worked, income_family, age, marital_status)
# Remove NAs
gss_rent <- gss_rent %>%
drop_na(total_children) %>%
drop_na(own_rent) %>%
drop_na(marital_status)
# Set NAs to 0 for hours worked
gss_rent <- gss_rent %>% drop_na(average_hours_worked)
# Remove those who don't know how much they work
# and don't know if they are paying rent
gss_rent <- filter(gss_rent, average_hours_worked != "Don't know")
gss_rent <- filter(gss_rent, own_rent != "Don't know")
gss_rent <- gss_rent %>%
mutate(own_or_not =
ifelse(own_rent=="Rented, even if no cash rent is paid", 0, 1))
kable(summary(gss_logit)$coeff) %>%
kable_styling(full_width = F)
?kable_styling()
kable(summary(gss_logit)$coeff) %>%
kable_styling(full_width = F, wraptable_width = "1pt")
?kable_styling()
kable(summary(gss_logit)$coeff) %>%
kable_styling(full_width = F, wraptable_width = "1pt")
?kable_styling
