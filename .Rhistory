numbers <- c(1:10)
sample(x = numbers, size = 10, replace = TRUE)
# runif
?runif()
runif(n = 10, min = 0, max = 100) %>% round(digits = 0)
# rnorm
?rnorm
rnorm(n = 10, mean = 0, sd = 1)
our_data <-
tibble(some_random_data = sample(x = numbers, size = 10, replace = TRUE),
some_more = runif(n = 10, min = 0, max = 100) %>% round(digits = 0),
some_normal_data = rnorm(n = 10, mean = 0, sd = 1))
library(tidyverse)
set.seed(1)
# Sample
letters <- c("a", "b", "c", "d")
sample(x = names, size = 10, replace = TRUE, prob = c(0.90, 0.05, 0.03, 0.02))
numbers <- c(1:10)
sample(x = numbers, size = 10, replace = TRUE)
# runif
?runif()
runif(n = 10, min = 0, max = 100) %>% round(digits = 0)
# rnorm
?rnorm
rnorm(n = 10, mean = 0, sd = 1)
our_data <-
tibble(some_random_data = sample(x = numbers, size = 10, replace = TRUE),
some_more = runif(n = 10, min = 0, max = 100) %>% round(digits = 0),
some_normal_data = rnorm(n = 10, mean = 0, sd = 1))
library(tidyverse)
set.seed(1)
# Sample
letters <- c("a", "b", "c", "d")
sample(x = names, size = 10, replace = TRUE, prob = c(0.90, 0.05, 0.03, 0.02))
numbers <- c(1:10)
sample(x = numbers, size = 10, replace = TRUE)
# runif
?runif()
runif(n = 10, min = 0, max = 100) %>% round(digits = 0)
# rnorm
?rnorm
rnorm(n = 10, mean = 0, sd = 1)
our_data <-
tibble(some_random_data = sample(x = numbers, size = 10, replace = TRUE),
some_more = runif(n = 10, min = 0, max = 100) %>% round(digits = 0),
some_normal_data = rnorm(n = 10, mean = 0, sd = 1))
set.seed(853)
our_data <-
tibble(some_random_data = sample(x = numbers, size = 10, replace = TRUE),
some_more = runif(n = 10, min = 0, max = 100) %>% round(digits = 0),
some_normal_data = rnorm(n = 10, mean = 0, sd = 1))
set.seed(853)
our_data <-
tibble(some_random_data = sample(x = numbers, size = 10, replace = TRUE),
some_more = runif(n = 10, min = 0, max = 100) %>% round(digits = 0),
some_normal_data = rnorm(n = 10, mean = 0, sd = 1))
tinytex:::is_tinytex()
Household_Size = c(4, 5, 2, 4, 4, 1, 3, 5, 4, 6)
Grocery_Bill = =
c(373.74, 596.13, 200.01, 526.58, 405.47, 190.11, 325.73, 515.41, 323.70, 711.21)
n=length(Household_Size)
N=1000
house_data<-tibble(Household_Size, Grocery_Bill)
library(tibble)
house_data<-tibble(Household_Size, Grocery_Bill)
Grocery_Bill = =
c(373.74, 596.13, 200.01, 526.58, 405.47, 190.11, 325.73, 515.41, 323.70, 711.21)
n=length(Household_Size)
N=1000
house_data<-tibble(Household_Size, Grocery_Bill)
Grocery_Bill = c(373.74, 596.13, 200.01, 526.58, 405.47, 190.11, 325.73, 515.41, 323.70, 711.21)
n=length(Household_Size)
N=1000
house_data<-tibble(Household_Size, Grocery_Bill)
## Variance & Standard Error of Ratio
var <- (1/mean(Household_Size)^2)*
(1-(n/N))*(1/n)*
(var(Grocery_Bill)+Rhat^2*var(Household_Size)-2*Rhat*cov(Grocery_Bill, Household_size))
stderr <- sqrt(var)
## Variance & Standard Error of Ratio
ratio_var <- (1/mean(Household_Size)^2)*
(1-(n/N))*(1/n)*
(var(Grocery_Bill)+Rhat^2*var(Household_Size)-2*Rhat*cov(Grocery_Bill, Household_size))
ratio_stderr <- sqrt(ratio_var)
## Ratio
Rhat <- mean(Grocery_Bill)/mean(Household_Size)
Rhat1 <- sum(Grocery_Bill)/sum(Household_Size)
## Variance & Standard Error of Ratio
ratio_var <- (1/mean(Household_Size)^2)*
(1-(n/N))*(1/n)*
(var(Grocery_Bill)+Rhat^2*var(Household_Size)-2*Rhat*cov(Grocery_Bill, Household_size))
ratio_stderr <- sqrt(ratio_var)
Household_Size = c(4, 5, 2, 4, 4, 1, 3, 5, 4, 6) ## x
Grocery_Bill = c(373.74, 596.13, 200.01, 526.58, 405.47, 190.11, 325.73, 515.41, 323.70, 711.21) ## y
n=length(Household_Size)
N=1000
house_data<-tibble(Household_Size, Grocery_Bill)
## Ratio
Rhat <- mean(Grocery_Bill)/mean(Household_Size)
Rhat1 <- sum(Grocery_Bill)/sum(Household_Size)
## Variance & Standard Error of Ratio
ratio_var <- (1/mean(Household_Size)^2)*
(1-(n/N))*(1/n)*
(var(Grocery_Bill)+Rhat^2*var(Household_Size)-2*Rhat*cov(Grocery_Bill, Household_size))
Household_Size = c(4, 5, 2, 4, 4, 1, 3, 5, 4, 6) ## x
Grocery_Bill = c(373.74, 596.13, 200.01, 526.58, 405.47, 190.11, 325.73, 515.41, 323.70, 711.21) ## y
n=length(Household_Size)
N=1000
house_data<-tibble(Household_Size, Grocery_Bill)
## Ratio
Rhat <- mean(Grocery_Bill)/mean(Household_Size)
Rhat1 <- sum(Grocery_Bill)/sum(Household_Size)
## Variance & Standard Error of Ratio
ratio_var <- (1/mean(Household_Size)^2)*
(1-(n/N))*(1/n)*
(var(Grocery_Bill)+Rhat^2*var(Household_Size)-2*Rhat*cov(Grocery_Bill, Household_Size))
ratio_stderr <- sqrt(ratio_var)
Household_Size = c(4, 5, 2, 4, 4, 1, 3, 5, 4, 6) ## x
Grocery_Bill = c(373.74, 596.13, 200.01, 526.58, 405.47, 190.11,
325.73, 515.41, 323.70, 711.21) ## y
n=length(Household_Size)
N=1000
house_data<-tibble(Household_Size, Grocery_Bill)
## Ratio
Rhat <- mean(Grocery_Bill)/mean(Household_Size)
Rhat1 <- sum(Grocery_Bill)/sum(Household_Size)
## Variance & Standard Error of Ratio
var_Rhat <- (1/mean(Household_Size)^2)*
(1-(n/N))*(1/n)*
(var(Grocery_Bill)+Rhat^2*var(Household_Size)-2*Rhat*cov(Grocery_Bill, Household_Size))
SE_Rhat <- sqrt(var_Rhat)
install.packages("survey")
library(survey)
## Using Survey Package
?svydesign
Household_Size = c(4, 5, 2, 4, 4, 1, 3, 5, 4, 6) ## x
house_data<-tibble(id=/1,Household_Size, Grocery_Bill)
house_data<-tibble(id=-1,Household_Size, Grocery_Bill)
View(house_data)
house_data<-tibble(id=1:n,Household_Size, Grocery_Bill)
#finite population correction
fpc.srs = rep(N, n) # Repeat 1000, 10 times
house.design <- svydesign(id=~id, data=house_data, fpc=fpc.srs)
Rhat2 <- svyratio(~Grocery_Bill, ~Household_Size, design=house.design)
svyratio(~Grocery_Bill, ~Household_Size, design=house.design)
svyratio(~Grocery_Bill, ~Household_Size, design=house.design)
Household_Size = c(4, 5, 2, 4, 4, 1, 3, 5, 4, 6) ## x
Grocery_Bill = c(373.74, 596.13, 200.01, 526.58, 405.47,
190.11, 325.73, 515.41, 323.70, 711.21) ## y
n=length(Household_Size)
N=1000
house_data<-tibble(id=1:n,Household_Size, Grocery_Bill)
## Ratio
Rhat <- mean(Grocery_Bill)/mean(Household_Size)
Rhat1 <- sum(Grocery_Bill)/sum(Household_Size)
## Variance & Standard Error of Ratio
var_Rhat <- (1/mean(Household_Size)^2)*
(1-(n/N))*(1/n)*
(var(Grocery_Bill)+Rhat^2*var(Household_Size)-2*Rhat*cov(Grocery_Bill, Household_Size))
SE_Rhat <- sqrt(var_Rhat)
## CI
lower_bound<-Rhat-qnorm(0.975)*SE_Rhat
Upper_bound<-Rhat+qnorm(0.975)*SE_Rhat
## Using Survey Package
?svydesign
#finite population correction
fpc.srs = rep(N, n) # Repeat 1000, 10 times
house.design <- svydesign(id=~id, data=house_data, fpc=fpc.srs)
svyratio(~Grocery_Bill, ~Household_Size, design=house.design)
# compl
house.design <- svydesign(id=~1, data=house_data, fpc=fpc.srs)
svyratio(~Grocery_Bill, ~Household_Size, design=house.design)
# compl
house.design <- svydesign(id=~0, data=house_data, fpc=fpc.srs)
svyratio(~Grocery_Bill, ~Household_Size, design=house.design)
house_data<-tibble(Household_Size, Grocery_Bill)
## Ratio
Rhat <- mean(Grocery_Bill)/mean(Household_Size)
Rhat1 <- sum(Grocery_Bill)/sum(Household_Size)
## Variance & Standard Error of Ratio
var_Rhat <- (1/mean(Household_Size)^2)*
(1-(n/N))*(1/n)*
(var(Grocery_Bill)+Rhat^2*var(Household_Size)-2*Rhat*cov(Grocery_Bill, Household_Size))
SE_Rhat <- sqrt(var_Rhat)
## CI
lower_bound<-Rhat-qnorm(0.975)*SE_Rhat
Upper_bound<-Rhat+qnorm(0.975)*SE_Rhat
## Using Survey Package
?svydesign
#finite population correction
fpc.srs = rep(N, n) # Repeat 1000, 10 times
# compl
house.design <- svydesign(id=~0, data=house_data, fpc=fpc.srs)
svyratio(~Grocery_Bill, ~Household_Size, design=house.design)
# Q1
N=440
W19 = c(3.0, 3.4, 2.2, 1.8, 1.9, 1.9, 2.3, 2.0, 2.7, 3.1, 1.1)
W20 = c(3.3, 3.3, 2.4, 1.5, 1.9, 3.1, 2.0, 2.9, 2.5, 3.7, 1.3)
Rhat <- mean(W20)/mean(W19)
# Q1
N=440
W19 = c(3.0, 3.4, 2.2, 1.8, 1.9, 1.9, 2.3, 2.0, 2.7, 3.1, 1.1)
W20 = c(3.3, 3.3, 2.4, 1.5, 1.9, 3.1, 2.0, 2.9, 2.5, 3.7, 1.3)
Rhat <- mean(W20)/mean(W19)
# Q2
N=440
W19 = c(3.0, 3.4, 2.2, 1.8, 1.9, 1.9, 2.3, 2.0, 2.7, 3.1, 1.1)
W20 = c(3.3, 4.0, 2.4, 1.4, 1.9, 3.9, 2.0, 2.9, 2.7, 3.7, 1.4)
Rhat <- mean(W20)/mean(W19)
# Q2
N=440
W19 = c(3.0, 3.4, 2.2, 1.8, 1.9, 1.9, 2.3, 2.0, 2.7, 3.1, 1.1)
W20 = c(3.3, 4.0, 2.4, 1.4, 1.9, 3.9, 2.0, 2.9, 2.7, 3.7, 1.4)
n=length(w19)
n=length(W19)
# Q2
N=440
W19 = c(3.0, 3.4, 2.2, 1.8, 1.9, 1.9, 2.3, 2.0, 2.7, 3.1, 1.1)
W20 = c(3.3, 4.0, 2.4, 1.4, 1.9, 3.9, 2.0, 2.9, 2.7, 3.7, 1.4)
GPA_data<-tibble(W19, W20)
n=length(W19)
fpc.srs = rep(N, n)
GPA.design <- svydesign(id=~0, data=GPA_data, fpc=fpc.srs)
svyratio(~W20, ~W19, design=GPA.design)
#0R
var_Rhat <- (1/mean(W19)^2)*
(1-(n/N))*(1/n)*
(var(W20)+Rhat^2*var(W19)-2*Rhat*cov(W20, W19))
SE_Rhat <- sqrt(var_Rhat)
# Q3
N=440
W19 = c(3.1, 3.4, 2.1, 1.9, 2.1, 1.9, 2.3, 2.4, 2.7, 3.1, 1.1)
W20 = c(3.3, 4.0, 2.4, 1.4, 1.9, 3.9, 2.0, 2.9, 2.7, 3.7, 1.4)
n=length(W19)
Rhat <- mean(W20)/mean(W19)
var_Rhat <- (1/mean(W19)^2)*
(1-(n/N))*(1/n)*
(var(W20)+Rhat^2*var(W19)-2*Rhat*cov(W20, W19))
SE_Rhat <- sqrt(var_Rhat)
lower_bound<-Rhat-qnorm(0.975)*SE_Rhat
Upper_bound<-Rhat+qnorm(0.975)*SE_Rhat
## simple linear regression
data(cars)
head(cars)
## library(tidyverse)
cars %>%
ggplot(aes(x=speed, y=dist))+
geom_point()
library(tidyverse)
cars %>%
ggplot(aes(x=speed, y=dist))+
geom_point()
my_SLRmodel <- lm(dist~speed, data=cars)
summary(my_SLRmodel)
## linear regression
data(iris)
head(iris)
my_LRmodel <- lm(Petal.Width ~ Petal.Length + Sepal.Width +
Sepal.Length + Sepal.Width*Sepal.Length,
data=iris)
summary(my_LRmodel)
library(survey)
Household_Size = c(4, 5, 2, 4, 4, 1, 3, 5, 4, 6)
Grocery_Bill = c(373.74, 596.13, 200.01, 526.58,
405.47,  190.11, 325.73, 515.41, 323.70, 711.21)
n=length(Household_Size)
N=1000
library(survey)
Household_Size = c(4, 5, 2, 4, 4, 1, 3, 5, 4, 6)
Grocery_Bill = c(373.74, 596.13, 200.01, 526.58,
405.47,  190.11, 325.73, 515.41, 323.70, 711.21)
n=length(Household_Size)
N=1000
summary(lm(Grocery_Bill~Household_Size))
summary(lm(Grocery_Bill~Household_Size))
fpc.srs = rep(N, n)
house.design <- svydesign(id=~1, data=house_data, fpc=fpc.srs)
mysvylm <- svyglm(Grocery_Bill~Household_Size, house.design)
house_data <- tibble(Household_Size, Grocery_Bill)
summary(lm(Grocery_Bill~Household_Size))
fpc.srs = rep(N, n)
house.design <- svydesign(id=~1, data=house_data, fpc=fpc.srs)
mysvylm <- svyglm(Grocery_Bill~Household_Size, house.design)
summary(mysvylm)
N=800
n=length(Household_Size)
# Q5
Household_Size = c(4, 5, 2, 4, 4, 1, 3, 4, 4, 5, 7)
Grocery_Bill = c(373.74, 596.13, 200.01, 426.58, 405.47,  190.11,
325.73, 515.41, 323.70, 711.21, 699.31)
N=800
n=length(Household_Size)
house_data<-tibble(Household_Size, Grocery_Bill)
fpc.srs = rep(N, n)
house.design <- svydesign(id=~1, data=house_data, fpc=fpc.srs)
View(house.design)
View(house_data)
mysvylm <- svyglm(Grocery_Bill ~ Household_Size, house.design)
summary(mysvylm)
# Q6
data(iris)
# Q6
data(iris)
force(iris)
View(iris)
# Q6
data(iris)
N=400
n=length(Sepal.Length)
n=length(iris$Sepal.Length)
# Q6
data(iris)
N=400
n=length(iris$Sepal.Length)
fpc.srs = rep(N, n)
iris.design <- svydesign(id=~1, data=iris, fpc=fpc.srs)
# Q6
data(iris)
N=400
n=length(iris$Sepal.Length)
fpc.srs = rep(N, n)
iris.design <- svydesign(id=~1, data=iris, fpc=fpc.srs)
mysvylm <- svyglm(Petal.Width ~ Petal.Length+Sepal.Length+Sepal.Width, house.design)
# Q6
data(iris)
N=400
n=length(iris$Sepal.Length)
fpc.srs = rep(N, n)
iris.design <- svydesign(id=~1, data=iris, fpc=fpc.srs)
mysvylm <- svyglm(Petal.Width ~ Petal.Length+Sepal.Length+Sepal.Width, iris.design)
summary(mysvylm)
mydata <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
## Standard Logistic Regression
mylogit<-glm(admit ~ gre + gpa +
as.factor(rank), data=mydata, family="binomial")
summary(mylogit)
e^(-0.7544)
## Survey Estimation for Logistic Regression
n=length(mydata$admit)
N=6000
#install.packages("survey")
library(survey)
## Using the Survey Library
fpc.srs = rep(N, n)
ucla.design <- svydesign(id=~1, data=mydata, fpc=fpc.srs)
mysvyglm <- svyglm(admit ~ gre + gpa + as.factor(rank),
ucla.design, family="binomial")
summary(mysvyglm)
#Q7
log_odds =-3.989979+0.002264*(600)+0.804038*(3.2)-0.675443*(0)-1.34*(0)-1.55*(0)
#Q7
log_odds =-3.989979+0.002264*(600)+0.804038*(3.2)-0.675443*(0)-1.34*(0)-1.55*(0)
p_p_1 = 10^(log_odds)
#Q7
log_odds =-3.989979+0.002264*(600)+0.804038*(3.2)-0.675443*(0)-1.34*(0)-1.55*(0)
odd = 10^(log_odds)
#Q7
log_odds =-3.989979+0.002264*(600)+0.804038*(3.2)-0.675443*(0)-1.34*(0)-1.55*(0)
odds = 10^(log_odds)
ex = -0.7544
ex = 10^(ex)
ex2 = 0.3199/(1-0.3199)
ex = -0.7544
ex = 10^(ex)
ex2 = 0.3199/(1-0.3199)
log_p = -3.99+0.02(520)+0.804(3.4)-0.675(1)
log_p = -3.99+0.02*(520)+0.804*(3.4)-0.675*(1)
log_p = -3.99+0.002*(520)+0.804*(3.4)-0.675*(1)
log_odds =-3.989979+0.002264*(520)+0.804038*(3.4)-0.675443*(1)
log_p =-3.989979+0.002264*(520)+0.804038*(3.4)-0.675443*(1)
p_1_p = 10^(log_p)
logit2prob(log_p)
install.packages("logit2prob")
log_p =-3.989979+0.002264*(520)+0.804038*(3.4)-0.675443*(1)
p = plogis(log_p)
p = plogis(log_odds)
log_p =-3.989979+0.002264*(520)+0.804038*(3.4)-0.675443*(1)
p = plogis(log_p)
log_p =-3.989979+0.002264*(520)+0.804038*(3.4)-0.675443*(1)
p = plogis(log_p)
log_p =-3.989979+0.002264*(520)+0.804038*(3.4)-0.675443*(1)
p = plogis(log_p)
#Q7
log_odds =-3.989979+0.002264*(600)+0.804038*(3.2)-0.675443*(0)-1.34*(0)-1.55*(0)
probability = plogis(log_odds)
# Q9
library(survey)
mydata <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
n=length(mydata$admit)
N=8000
fpc.srs = rep(N, n)
ucla.design <- svydesign(id=~1, data=mydata, fpc=fpc.srs)
mysvyglm <- svyglm(admit ~ gre + gpa + as.factor(rank),
ucla.design, family="binomial")
summary(mysvyglm)
#### Workspace set-up ####
library(janitor)
library(tidyverse)
# Load the data dictionary and the raw data and correct the variable names
raw_data <- read_csv("AA8MGinv.csv")
# Load the data dictionary and the raw data and correct the variable names
raw_data <- read_csv("AA8MGinv.csv")
# Load the data dictionary and the raw data and correct the variable names
raw_data <- read_csv("\OneDrive - University of Toronto\University 2020-2021\Fall\STA304\Problem Sets\Problem Set 2\AA8MGinv.csv")
# Load the data dictionary and the raw data and correct the variable names
raw_data <- read_csv("\University 2020-2021\Fall\STA304\Problem Sets\Problem Set 2\AA8MGinv.csv")
# Load the data dictionary and the raw data and correct the variable names
raw_data <- read_csv("C:\Users\elric\OneDrive - University of Toronto\University 2020-2021\Fall\STA304\Problem Sets\Problem Set 2AA8MGinv.csv")
# Load the data dictionary and the raw data and correct the variable names
raw_data <- read_csv("C:\Users\elric\OneDrive - University of Toronto\University 2020-2021\Fall\STA304\Problem Sets\Problem Set 2\AA8MGinv.csv")
?read
?read_csv
?read_
# Load the data dictionary and the raw data and correct the variable names
raw_data <- read_csv("AA8MGinv.csv")
knitr::opts_chunk$set(echo = FALSE)
library(knitr)
library(tidyverse)
library(survey)
#library.packages('pander') <- uncomment me to install pander
library(pander)
library(kableExtra)
## CLEAN DATA
gss <- read.csv(file = 'gss.csv')
gss_rent <- gss %>% select(total_children, own_rent,
average_hours_worked, income_family, age, marital_status)
# Remove NAs
gss_rent <- gss_rent %>%
drop_na(total_children) %>%
drop_na(own_rent) %>%
drop_na(marital_status)
# Set NAs to 0 for hours worked
gss_rent <- gss_rent %>% drop_na(average_hours_worked)
# Remove those who don't know how much they work
# and don't know if they are paying rent
gss_rent <- filter(gss_rent, average_hours_worked != "Don't know")
gss_rent <- filter(gss_rent, own_rent != "Don't know")
gss_rent <- gss_rent %>%
mutate(own_or_not =
ifelse(own_rent=="Rented, even if no cash rent is paid", 0, 1))
kable(head(gss_rent))
setwd("~/GitHub/Housing-Market-Strategy")
kable(head(gss_rent))  %>%
kable_styling(full_width = F)
kable(head(gss_rent)[1:5, ])  %>%
kable_styling(full_width = F)
kable(head(gss_rent)[, 3:])  %>%
kable(head(gss_rent)[, 3:5])  %>%
kable_styling(full_width = F)
kable(head(gss_rent)[, 1:3])  %>%
kable_styling(full_width = F)
kable(head(gss_rent)[, 4:5])  %>%
kable_styling(full_width = F)
kable(head(gss_rent)[, 4:6])  %>%
kable_styling(full_width = F)
kable(head(gss_rent)[, 4:7])  %>%
kable_styling(full_width = F)
kable(head(gss_rent)[, 4:8])  %>%
kable_styling(full_width = F)
kable(head(gss_rent)[, 4:7])  %>%
kable_styling(full_width = F)
kable(head(gss_rent)[, 1:3])  %>%
kable_styling(full_width = F)
n=length(gss_rent$income_family)
N=36708083 - 1941873 - 2021564 - 1948681
fpc.srs = rep(N, n)
gss.design <- svydesign(id=~1, data=gss_rent, fpc=fpc.srs)
gss_logit <- svyglm(own_or_not ~ as.factor(income_family) + total_children + age + as.factor(average_hours_worked) + as.factor(marital_status),
gss.design, family="binomial")
summary(gss_logit)
knitr::opts_chunk$set(echo = TRUE)
#Grab the Date and delay time column
Monthly_delays <- delays_2019 %>% select(Date, `Min Delay`)
gss_rent_income <- gss_rent %>% select(income_family, own_or_not) %>%
group_by(Date) %>%
summarise(`total_own` = sum(`own_or_not`))
gss_rent_income <- gss_rent %>% select(income_family, own_or_not) %>%
group_by(income_family) %>%
summarise(`total_own` = sum(`own_or_not`))
View(gss_rent_income)
gss_rent_income <- gss_rent %>% select(income_family, own_or_not) %>%
group_by(income_family) %>%
summarise(`total_own` = sum(`own_or_not`))
ggplot(gss_rent_income, aes(x=income_family, y=total_own))
gss_rent_income <- gss_rent %>% select(income_family, own_or_not) %>%
group_by(income_family) %>%
summarise(`total_own` = sum(`own_or_not`))
ggplot(gss_rent_income, aes(x=income_family, y=total_own)) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
gss_rent_income <- gss_rent %>% select(income_family, own_or_not) %>%
group_by(income_family) %>%
summarise(`total_own` = sum(`own_or_not`))
ggplot(gss_rent_income, aes(x=income_family, y=total_own)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Ownership Frequency", x = "Owned or Not", y = "Frequency")
gss_rent_income <- gss_rent %>% select(income_family, own_or_not) %>%
group_by(income_family) %>%
summarise(`total_own` = sum(`own_or_not`))
ggplot(gss_rent_income, aes(x=income_family, y=total_own)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Family Income vs Ownership", x = "Family Income", y = "Total ownership count") +
geom_bar(stat="identity", fill="red")
gss_rent_income <- gss_rent %>% select(income_family, own_or_not) %>%
group_by(income_family) %>%
summarise(`total_own` = sum(`own_or_not`))
ggplot(gss_rent_income, aes(x=income_family, y=total_own)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(title = "Family Income vs Ownership", x = "Family Income", y = "Total ownership count") +
geom_bar(stat="identity", fill="blue")
kable(summary(gss_logit)$coeff) %>%
kable_styling(full_width = F)
kable(summary(gss_logit)$coeff) %>%
kable_styling(full_width = F)
